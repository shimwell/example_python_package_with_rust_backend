# there are different ways of making a pypi package with rust
# https://github.com/PyO3/maturin-action has examples
name: Build and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  macos:
    # erros on Library not loaded: /usr/local/opt/gettext/lib/libintl.8.dylib
  #   runs-on: macos-latest
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: x64
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --sdist
      - name: Install built wheel - x86_64
        run: |
          pip install example_python_package_with_rust_backend --no-index --find-links dist --force-reinstall
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: --release --out dist
      - name: Install built wheel - universal2
        run: |
          pip install example_python_package_with_rust_backend --no-index --find-links dist --force-reinstall
          python -c "import example_python_package_with_rust_backend"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        # uses: actions/upload-artifact@v4 breaks due to artifact names being the same3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@nightly
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
      - name: Install built wheel
        run: |
          pip install example_python_package_with_rust_backend --no-index --find-links dist --force-reinstall
          python -c "import example_python_package_with_rust_backend"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        # uses: actions/upload-artifact@v4 breaks due to artifact names being the same
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.9
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        args: --release --out dist --sdist -m Cargo.toml
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install example_python_package_with_rust_backend --no-index --find-links dist --force-reinstall
        python -c "import example_python_package_with_rust_backend"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      # uses: actions/upload-artifact@v4 breaks due to artifact names being the same
      with:
        name: wheels
        path: dist

  upload_pypi:
    runs-on: ubuntu-latest
    needs: [ linux, windows, macos]
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
      # - uses: actions/download-artifact@v4 does not find the artifacts
        with:
          name: wheels
          path: dist
      - name: List artifacts
        run: ls -lhs
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
